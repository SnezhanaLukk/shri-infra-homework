name: Deploy to Production

on:
  workflow_dispatch:
    inputs:
      release_version:
        description: "Версия релиза"
        required: true

env:
  REGISTRY: cr.yandex/${{ secrets.REGISTRY_ID }}/app

jobs:
  check_image:
    runs-on: ubuntu-latest
    steps:
      - name: Create IAM token and check image exists
        run: |
          echo '${{ secrets.YC_SA_JSON }}' > key.json

          IAM_TOKEN=$(curl -s -X POST https://iam.api.cloud.yandex.net/iam/v1/tokens \
            -H "Content-Type: application/json" \
            -d @key.json | jq -r '.iamToken')

          VERSION="${{ github.event.inputs.release_version }}"
          IMAGE="$REGISTRY:${VERSION}_latest"

          CODE=$(curl -s -o /dev/null -w "%{http_code}" \
            -H "Authorization: Bearer $IAM_TOKEN" \
            "https://container-registry.api.cloud.yandex.net/v1/repositories/${{ secrets.REGISTRY_ID }}/app/tags/${VERSION}_latest")

          if [[ "$CODE" != "200" ]]; then
            echo "❌ Image $IMAGE does not exist in Yandex Container Registry"
            exit 1
          fi

          echo "✅ Image $IMAGE exists"

  deploy:
    needs: check_image
    runs-on: ubuntu-latest
    steps:
      - name: Setup SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.PROD_SSH_PRIVATE_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          ssh-keyscan -H ${{ secrets.PROD_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy to production server
        run: |
          VERSION="${{ github.event.inputs.release_version }}"
          IMAGE="$REGISTRY:${VERSION}_latest"

          ssh -i ~/.ssh/id_ed25519 ${{ secrets.PROD_USER }}@${{ secrets.PROD_HOST }} <<EOF
            docker pull $IMAGE
            docker stop app || true
            docker rm app || true
            docker run -d --name app -p 80:3000 $IMAGE
          EOF

  comment_issue:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - name: Add comment to issue
        run: |
          VERSION="${{ github.event.inputs.release_version }}"
          IMAGE="$REGISTRY:${VERSION}_latest"
          DATE=$(date +'%Y-%m-%d')
          AUTHOR=${{ github.actor }}

          BODY="Релиз v${VERSION} выкачан в прод\n\n- Дата: ${DATE}\n- Автор: ${AUTHOR}\n- Docker: \`${IMAGE}\`"

          ISSUE_ID=$(gh issue list --state open --search "Release v${VERSION}" --json number --jq '.[0].number')
          gh issue comment "$ISSUE_ID" --body "$BODY"
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}